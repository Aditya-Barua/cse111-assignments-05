# -*- coding: utf-8 -*-
"""Assignment 05_21101004_AdityaBarua.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Tmk-6cBNW2pmaSs_-YEntPgXBmc2_gN4
"""

#Task - 01

class Marks:
    def __init__(self,mark):
        self.mark = mark 
    def __add__(self,var1):
        s = self.mark + var1.mark
        var2 = Marks(s)
        return var2

Q1 = Marks(int(input("Quiz 1 (out of 10): ")))
Q2 = Marks(int(input("Quiz 2 (out of 10): ")))
Lab = Marks(int(input("Lab (out of 30): ")))
Mid = Marks(int(input("Mid (out of 20): ")))
Final = Marks(int(input("Final (out of 30): ")))
total = Q1 + Q2 + Lab + Mid + Final
print("Total marks: {}".format(total.mark))

#Task - 02

class Teacher:
    def __init__(self,name,department):
        self.__name = name 
        self.__department = department
        self.__var = []
    def addCourse(self,*var2):
        for i in var2:
            self.__var += [i.var1]
       
    def printDetail(self):
        print('Name:',self.__name)
        print('Department:',self.__department)
        print('List of courses')
        print("=======================")
        for i in self.__var:
            print(i)
        print("=======================")
class Course:
    def __init__(self,var1):
        self.var1 = var1 
    print("=======================")
t1 = Teacher("Saad Abdullah", "CSE")
t2 = Teacher("Mumit Khan", "CSE")
t3 = Teacher("Sadia Kazi", "CSE")
c1 = Course("CSE 110 Programming Language I")
c2 = Course("CSE 111 Programming Language-II")
c3 = Course("CSE 220 Data Structures")
c4 = Course("CSE 221 Algorithms")
c5 = Course("CCSE 230 Discrete Mathematics")
c6 = Course("CSE 310 Object Oriented Programming")
c7 = Course("CSE 320 Data Communications")
c8 = Course("CSE 340 Computer Architecture")
t1.addCourse(c1)
t1.addCourse(c2)
t2.addCourse(c3)
t2.addCourse(c4)
t2.addCourse(c5)
t3.addCourse(c6)
t3.addCourse(c7)
t3.addCourse(c8)
t1.printDetail()
t2.printDetail()
t3.printDetail()

#Task - 03

class Player:
    def __init__(self,name):
        self.name = name

class Team:
    def __init__(self,team = None):
        self.__team = team
        self.__players = []
    def setName(self,team):
        self.__team = team
    def addPlayer(self,*p):
        for i in p:
            self.__players = self.__players.__add__([i.name])

    def printDetail(self):
        print('Team:',self.__team)
        print('Lists of players:')
        print(self.__players)

print("=================")
b = Team()
b.setName('Bangladesh')
mashrafi = Player("Mashrafi")
b.addPlayer(mashrafi)
tamim = Player("Tamim")
b.addPlayer(tamim)
b.printDetail()
print("=================")
print("=================")
a = Team("Australia")
ponting = Player("Ponting")
a.addPlayer(ponting)
lee = Player("Lee")
a.addPlayer(lee)
a.printDetail()
print("=================")

#Task - 04

class Color:
    def __init__(self,clr):
        self.clr = clr
    def __add__(self,var1):
        var2 = self.clr + var1.clr 
        if var2 == "yellowblue" or var2 == "blueyellow" :
            return Color("green")
        elif var2 == "yellowred" or var2 == "redyellow" :
            return Color("orange")
        elif var2 == "bluered" or var2 == "redblue":
            return Color("violet")
        else:
            pass
         
C1 = Color(input("First Color: ").lower())
C2 = Color(input("Second Color: ").lower())
C3 = C1 + C2
print("Color formed:", C3.clr)

#Task - 05
import math

class Circle:
    def __init__(self,r):
        self.__r = r
    def getRadius(self):
        return self.__r
    def setRadius(self,var1):
        self.__r = var1
        return self.__r
    def __add__(self,var2):
        c3 = self.__r + var2.__r
        return Circle(c3)
    def area(self):
        Area = math.pi * self.__r**2
        return Area

c1 = Circle(4)
print("First circle radius:" , c1.getRadius())
print("First circle area:" ,c1.area())
c2 = Circle(5)
print("Second circle radius:" ,c2.getRadius())
print("Second circle area:" ,c2.area())
c3 = c1 + c2
print("Third circle radius:" ,c3.getRadius())
print("Third circle area:" ,c3.area())

#Task - 06

class Triangle:
    def __init__(self,base,height):
        self.__base = base
        self.__height = height
    def getBase(self):
        return self.__base
    def getHeight(self):
        return self.__height
    def setBase(self):
        pass
    def setHeight(self):
        pass
    def area(self):
        self.__area = 0.5 * self.__base * self.__height
        return self.__area
    def __sub__(self,other):
        base = self.__base - other.__base
        height = self.__height - other.__height
        var = Triangle(base,height)
        return var

t1 = Triangle (10,5)
print("First Triangle Base:" , t1.getBase())
print("First Triangle Height:" , t1.getHeight())
print("First Triangle area:" ,t1.area())
print("===============================")
t2 = Triangle(5,3)
print("Second Triangle Base:" , t2.getBase())
print("Second Triangle Height:" , t2.getHeight())
print("Second Triangle area:" ,t2.area())
print("===============================")
t3 = t1 - t2
print("Third Triangle Base:" , t3.getBase())
print("Third Triangle Height:" , t3.getHeight())
print("Third Triangle area:" ,t3.area())

#Task - 07

class Dolls:
  def __init__(self,var1,var2):
    self.var1 = var1
    self.var2 = var2

  def detail(self):
    lst = self.var1.split()
    if len(lst) <= 2:
      return "Doll: "+ self.var1 + "\n" + "Total price: " + str(self.var2) + " taka"
    else:
      return "Dolls: "+self.var1 + "\n" + "Total price: " + str(self.var2) + " taka"

  def __gt__(self,other):
    if self.var2 > other.var2:
      return True
    else:
      return False

  def __add__(self,other):
    var3 = self.var2 + other.var2
    var4 = self.var1 + " " + other.var1
    return Dolls(var4,var3)


obj_1 = Dolls("Tweety", 2500)
print(obj_1.detail())
if obj_1 > obj_1:
  print("Congratulations! You get the Tweety as a gift!")
else:
  print("Thank you!")
print("=========================")
obj_2 = Dolls("Daffy Duck", 1800)
print(obj_2.detail())
if obj_2 > obj_1:
  print("Congratulations! You get the Tweety as a gift!")
else:
  print("Thank you!")
print("=========================")
obj_3 = Dolls("Bugs Bunny", 3000)
print(obj_3.detail())
if obj_3 > obj_1:
  print("Congratulations! You get the Tweety as a gift!")
else:
  print("Thank you!")
print("=========================")
obj_4 = Dolls("Porky Pig", 1500)
print(obj_4.detail())
if obj_4 > obj_1:
  print("Congratulations! You get the Tweety as a gift!")
else:
  print("Thank you!")
print("=========================")
obj_5 = obj_2 + obj_3
print(obj_5.detail())
if obj_5 > obj_1:
  print("Congratulations! You get the Tweety as a gift!")
else:
  print("Thank you!")

#Task - 08

class Coordinates:
  def __init__(self,var1,var2):
    self.var1 = var1
    self.var2 = var2

  def detail(self):
    return (self.var1,self.var2)
  def __sub__(self,var):
    var3 = self.var1 - var.var1
    var4 = self.var2 - var.var2
    return Coordinates(var3,var4)
  def __mul__(self,var):
    var5 = self.var1 * var.var1
    var6 = self.var2 * var.var2
    return Coordinates(var5,var6)
  def __eq__(self,var):
    if self.var1 == var.var1:
      return "The calculated coordinates are the same."
    else:
      return "The calculated coordinates are NOT the same."
      
p1 = Coordinates(int(input()),int(input()))
p2 = Coordinates(int(input()),int(input()))
p4 = p1 - p2
print(p4.detail())
p5 = p1 * p2
print(p5.detail())
point_check = (p4 == p5)
print(point_check)